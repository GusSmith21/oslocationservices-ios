require './scripts/OCUnit2JUnit/ocunit2junit'
require './scripts/build'
require './scripts/simhelper'
require 'socket'

class String
  def self.colorize(text, color_code)
      "\e[#{color_code}m#{text}\e[0m"
  end

  def cyan
    self.class.colorize(self, 36)
  end

  def green
    self.class.colorize(self, 32)
  end

  def red
    self.class.colorize(self, 31)
  end
end

IS_WORKSPACE=false

# Parse the test output
def parse_test_output_for_result(result)
  output = File.read "build_output"
  report = ReportParser.new output

  fail "** REPORT PARSE FAILED **" unless report.exit_code

  if report.failed_test_case_count > 0
    fail "** TESTS FAILED **".red
  else
    puts "** TESTS PASSED **".green
  end
end

# Run tests using xcodebuild
def run_tests(coverage=nil)
  scheme_name = coverage == nil ? "OSLocationTestHost" : "OSLocationTestHost"
  return BuildHelper.xcodebuild "OSLocationService.xcodeproj", IS_WORKSPACE, scheme_name, "iphonesimulator", "clean build test", "-destination 'platform=iOS Simulator,name=iPhone 5'"
end

# Used by jenkins to get around the ssh/simulator bug in Xcode 6.
# See comment in testrunner.rb
desc 'Run tests via a service'
task :testremote do |t|
  s = TCPSocket.new 'localhost', 2901
  s.puts "test, #{Dir.pwd}"
  result = s.gets
  s.close
  parse_test_output_for_result result
end

# Used by testrunner.rb to execute the tests. We leave parsing
# to the process running on the jenkins slave
desc 'Called by the remote test service just to run the tests'
task :test_without_parse do |t|
  result = run_tests
end

# Run and parse tests. Preferred method to run tests
# and can be used if the ssh/sumulator bug gets fixed
desc 'Run unit tests'
task :test, :coverage do |t, args|
  puts '=== TEST ==='.cyan
  result = run_tests args[:coverage]
  parse_test_output_for_result result
  BuildHelper.parse_coverage unless args[:coverage] == nil
end

desc 'Run static analysis'
task :analyze do |t|
  builder = BuildHelper.new "OSLocationService", IS_WORKSPACE
  fail "** STATIC ANALYSIS HAS ISSUES **".red unless builder.analyze
end

=begin
==The following do not apply to framework projects==
desc 'Archives the build using the runner service'
task :archiveremote do |t|
  s = TCPSocket.new 'localhost', 2901
  s.puts "archive, #{Dir.pwd}"
  result = s.gets
  s.close
end

desc 'Builds and archives the app'
task :archive do |t|
  puts '=== BUILD ==='.cyan
  builder = BuildHelper.new "OSOAuth", IS_WORKSPACE
  builder.archive
end

desc 'Shows the current version'
task :show_version do |t|
  builder = BuildHelper.new "OSOAuth", IS_WORKSPACE
  builder.show_versions
end

desc 'Bumps the version number'
task :bump do |t|
  builder = BuildHelper.new "OSOAuth", IS_WORKSPACE
  builder.bump_version
end

desc 'Updates the marketing version number'
task :new_marketing_version, :version do |t, args|
  builder = BuildHelper.new "OSOAuth", IS_WORKSPACE
  builder.new_marketing_version args[:version]
end
=end
